(function(){'use strict';function a(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function b(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function c(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function d(){PIXI.settings.SCALE_MODE=PIXI.SCALE_MODES.NEAREST,PIXI.settings.MIPMAP_TEXTURES=PIXI.MIPMAP_MODES.OFF}function e(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}var f=Math.max,g=Math.min,h={basename({path:a,extension:b}){return a.substring(1+a.lastIndexOf("/")).replace(/(\..+?)$/,b?"$1":"")},mget({map:a,key:b,create:c}){return!a.has(b)&&a.set(b,c(b)),a.get(b)},dist(c,a){return Math.sqrt((a.x-c.x)**2+(a.y-c.y)**2)},to:{coord:{px(a){return a*l.Chunk.tile.size},tile(a){return Math.floor(a/l.Chunk.tile.size)}}},sync({a:c,b:a}){for(let b in a)c[b]=a[b]}},i={animated:{2374:{frames:[2374,2375,2376,2377,2378,2379,2380,2381].map(a=>`${a}`),speed:.075},429:{frames:[429,430].map(a=>`${a}`),speed:.05}}};class j{constructor({world:b,key:c}){a(this,"layers",new Map),this.key=c,this.world=b,this.sprite=new PIXI.Container,this.sprite.name=this.key,this.world.sprite.addChild(this.sprite)}async load({layer:{name:a},chunk:{x:b,y:c,width:d,height:e,data:i}}){this.layers.set(a,{x:b,y:c,width:d,height:e,data:i});const{origin:j,boundary:k}=this.world;h.sync({a:j,b:{x:g(b,j.x),y:g(c,j.y)}}),h.sync({a:k,b:{x:f(b,k.x),y:f(c,k.y)}})}async render({center:a,radius:b,force:c,animated:d,cache:e}){for(let[f,{x:g,y:j,width:k,height:m,data:n}]of this.layers.entries()){if(l.layers.ignored.has(f))continue;const m=this.sprite.getChildByName(f)||this.sprite.addChild(new PIXI.Container);if(m.name=f,m.position.set(h.to.coord.px(g),h.to.coord.px(j)),h.dist(a,{x:g,y:j})>b){m.removeChildren();continue}if(m.children.length&&!c)continue;const o={};m.cacheAsBitmap=!1,m.alpha=0,m.removeChildren();for(let[a,b]of n.entries()){let c=null;0>--b||(b in i.animated?(c=m.addChild(new PIXI.AnimatedSprite(i.animated[b].frames.map(PIXI.Texture.from))),c.animationSpeed=i.animated[b].speed,d&&(d.add(c),o.animated=!0)):c=m.addChild(new PIXI.Sprite.from(`${b}`)),c.position.set(h.to.coord.px(a%k),h.to.coord.px(~~(a/k))),c.width=c.height=l.Chunk.tile.size)}e&&(m.cacheAsBitmap=!0),o.animated||(m.cacheAsBitmap=!0),this.world.app.tween.fade({target:m,change:"alpha",from:0,to:1,duration:15})}}static key({x:a,y:b}){return`${a};${b}`}}a(j,"tile",{size:16});class k{constructor({world:a}){this.world=a,this.sprite=new PIXI.Sprite,this.render({delay:0})}async render({delay:a=250}={}){clearTimeout(this._render),this._render=setTimeout(async()=>{this.sprite.removeChildren(),this.sprite.anchor.set(.5);const a=h.to.coord.tile(this.world.app.renderer.view.width),b=h.to.coord.tile(this.world.app.renderer.view.height),c=i.animated[`${l.Sea.texture}`];for(let d=-a;d<=a;d++)for(let a=-b;a<=b;a++){const b=this.sprite.addChild(new PIXI.AnimatedSprite(c.frames.map(PIXI.Texture.from)));b.animationSpeed=c.speed,b.position.set(h.to.coord.px(d),h.to.coord.px(a)),b.width=b.height=l.Chunk.tile.size,b.play()}},a)}refresh({x:a,y:b}){const{origin:c}=this.world;this.sprite.alpha=0,this.sprite.position.set(h.to.coord.px(c.x+a),h.to.coord.px(c.y+b)),this.world.app.tween.fade({target:this.sprite,change:"alpha",from:0,to:1,duration:15})}}b(k,"texture",2374);class l{constructor({app:a,name:b}){c(this,"origin",{x:1/0,y:1/0}),c(this,"boundary",{x:-Infinity,y:-Infinity}),c(this,"chunks",new Map),c(this,"data",new Map),c(this,"creatures",new Set),c(this,"load",{world:async()=>{var a=Math.abs;const{layers:b,tilesets:c}=(await axios.get(`/maps/${this.name}/map.json`)).data;for(let a of c)m.loader.renderer.add(`/maps/${this.name}/${h.basename({path:a.source,extension:!1})}.textures.json`);for(let a of b)switch(a.type){case"tilelayer":{for(let b of a.chunks)await h.mget({map:this.chunks,key:l.Chunk.key(b),create:a=>new l.Chunk({world:this,key:a})}).load({layer:a,chunk:b});break}case"objectgroup":{for(let b of a.objects)await h.mget({map:this.data,key:b.name,create:a=>new l.Data({world:this,key:a,object:b})});break}}this.app.viewport.left=h.to.coord.px(this.origin.x),this.app.viewport.top=h.to.coord.px(this.origin.y),this.app.viewport.worldWidth=h.to.coord.px(a(this.boundary.x-this.origin.x)),this.app.viewport.worldHeight=h.to.coord.px(a(this.boundary.y-this.origin.y)),this.sprite.position.set(h.to.coord.px(-this.origin.x),h.to.coord.px(-this.origin.y)),this.sprite.data=this.sprite.addChild(new PIXI.Container),this.app.data.maps=(await axios.get(`/maps/${this.name}/locations.json`)).data},sea:async()=>{this.sea=new l.Sea({world:this}),this.sprite.addChildAt(this.sea.sprite,0)}}),c(this,"add",{creature(){const a=new Creature({species:"mudkip"});this.creatures.add(a),this.sprite.addChild(a.sprite)}}),this.name=b,this.sprite=new PIXI.Container,this.sprite.name=this.name,this.app=a,this.app.viewport.addChild(this.sprite)}async render({center:a=this.app.data.user.position,delay:b=100,radius:c="auto",offset:d=this.origin,force:e=!1,data:g=!0}={}){clearTimeout(this._render),this._render=setTimeout(async()=>{"auto"===c&&(c=Math.ceil(1.5*f(h.to.coord.tile(this.app.renderer.view.height),h.to.coord.tile(this.app.renderer.view.width)))),d&&(a={x:a.x+d.x,y:a.y+d.y});const b=new Set,i=[];for(let d of this.chunks.values())i.push(d.render({center:a,radius:c,force:e,animated:b}));g&&i.push(...[...this.data.values()].map(a=>a.render())),await Promise.all(i),b.forEach(a=>(a.play(),a.parent.cacheAsBitmap=!1)),this.app.params.get.update({x:this.app.data.user.position.x,y:this.app.data.user.position.y})},b),this.sea.refresh(this.app.data.user.position)}camera({x:a,y:b,offset:c=this.origin}){this.app.viewport.moveCenter({x:h.to.coord.px(a-c.x),y:h.to.coord.px(b-c.y)}),this.app.methods.update(),this.render()}}c(l,"layers",{ignored:new Set(["00-boundaries"])}),c(l,"Chunk",j),c(l,"Sea",k),c(l,"Data",class{constructor({world:a,key:b,object:c}){this.key=b,this.world=a,this.sprite=new PIXI.Container,this.load({data:c})}async load({data:a}){const{polygon:b,x:c,y:d,properties:e}=a;this.properties={},e.map(({name:a,value:b})=>this.properties[a]=b),this.polygons={tiled:new PIXI.Polygon(b.map(({x:a,y:b})=>({x:h.to.coord.tile(c+a),y:h.to.coord.tile(d+b)}))),points:b.flatMap(a=>[a.x,a.y])},this.sprite.position.set(c,d)}async render(){this.sprite.removeChildren(),this.graphics=this.sprite.addChild(new PIXI.Graphics),this.graphics.beginFill(16711680,.5).drawPolygon(this.polygons.points).endFill(),this.world.sprite.data.addChild(this.sprite)}});class m{constructor({world:a}){e(this,"ready",new Promise(()=>null)),e(this,"data",{user:{position:{x:0,y:0}},maps:[],show:{map:!1},lang:{},ready:!1}),e(this,"methods",{camera:({x:a,y:b,offset:c})=>this.world.camera({x:a,y:b,offset:c}),update:()=>this.data.user.position={x:h.to.coord.tile(this.view.center.x),y:h.to.coord.tile(this.view.center.y)},render:()=>this.world.render(),redirect:a=>window.location.replace(a)}),e(this,"renderer",new PIXI.Application({width:document.body.clientWidth,height:document.body.clientHeight,transparent:!0,resizeTo:window,antialias:!0})),e(this,"viewport",new Viewport.Viewport({screenWidth:window.innerWidth,screenHeight:window.innerHeight,interaction:this.renderer.renderer.plugins.interaction})),e(this,"controller",new Vue({el:"#app",data:this.data,methods:this.methods,mounted:()=>document.querySelector("#app .view").appendChild(this.renderer.view)})),e(this,"view",this.renderer.stage.addChild(this.viewport)),e(this,"params",{get:{update:a=>{for(let[b,c]of Object.entries(a))this.params.get.map.set(b,c);window.history.pushState("","",`/?${this.params.get.map.toString()}`)},map:new URLSearchParams(window.location.search)}}),e(this,"tween",{quadInOut:a=>a*a,fade:({target:a,change:b,from:c,to:d,duration:e})=>{let f=0,h=a.cacheAsBitmap;a.cacheAsBitmap=!1;const i=j=>{1<=(f+=j)/e?(a[b]=d,a.cacheAsBitmap=h,this.renderer.ticker.remove(i)):a[b]=g(d,c+(d-c)*this.tween.quadInOut(f/e))};this.renderer.ticker.add(i)}}),d(),this.world=new l({app:this,name:a}),this.view.on("moved",()=>this.methods.update()),this.view.on("moved-end",()=>this.methods.render()),this.view.on("zoomed-end",()=>this.methods.render()),this.view.drag().pinch().wheel().decelerate().clamp({direction:"all"}).clampZoom({minScale:.5,maxScale:1}),this.view.scale.set(1),this.ready=new Promise(async a=>{await this.world.load.world(),m.loader.renderer.load(async()=>{await this.world.load.sea(),this.methods.camera(this.params.get.map.has("x")&&this.params.get.map.has("y")?{x:+this.params.get.map.get("x")||0,y:+this.params.get.map.get("y")||0,offset:{x:0,y:0}}:{x:329,y:-924}),this.methods.update(),this.data.lang=(await axios.get(`/lang/${this.params.get.map.get("lang")||"en"}.json`)).data,a(),this.data.ready=!0})})}}e(m,"loader",{renderer:PIXI.Loader.shared}),async function(){const a=new m({world:"overworld"});await a.ready}()})();
