(function () {
	'use strict';

	var u = {basename({path:a,extension:b}){return a.substring(1+a.lastIndexOf("/")).replace(/(\..+?)$/,b?"$1":"")},mget({map:a,key:b,create:c}){return !a.has(b)&&a.set(b,c(b)),a.get(b)},rc(a){return a*World.Chunk.tile.size},dist(c,a){return Math.sqrt((a.x-c.x)**2+(a.y-c.y)**2)}};

	var textures = {animated:{2374:{frames:[2374,2375,2376,2377,2378,2379,2380,2381].map(a=>`${a}`),speed:.075},429:{frames:[429,430].map(a=>`${a}`),speed:.05}}};

	function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}class Chunk{constructor({world:a,key:b}){_defineProperty(this,"layers",new Map),this.key=b,this.world=a,this.sprite=new PIXI.Container,this.sprite.name=this.key,this.world.sprite.addChild(this.sprite);}async load({layer:{name:a},chunk:{x:b,y:c,width:d,height:e,data:f}}){var g=Math.max,h=Math.min;this.layers.set(a,{x:b,y:c,width:d,height:e,data:f});const{origin:i,boundary:j}=this.world;i.x=h(b,i.x),i.y=h(c,i.y),j.x=g(b,j.x),j.y=g(c,j.y);}async render({center:a,radius:b,force:c,animated:d,cache:e}){for(let[f,{x:g,y:h,width:i,height:j,data:k}]of this.layers.entries()){if(World.layers.ignored.has(f))continue;const j=this.sprite.getChildByName(f)||this.sprite.addChild(new PIXI.Container);if(j.name=f,j.position.set(u.rc(g),u.rc(h)),u.dist(a,{x:g,y:h})>b){j.removeChildren();continue}if(j.children.length&&!c)continue;const l={};j.cacheAsBitmap=!1,j.alpha=0,j.removeChildren();for(let[a,b]of k.entries()){let c=null;b--,b in textures.animated?(c=j.addChild(new PIXI.AnimatedSprite(textures.animated[b].frames.map(PIXI.Texture.from))),c.animationSpeed=textures.animated[b].speed,d&&(d.add(c),l.animated=!0)):c=j.addChild(new PIXI.Sprite.from(`${b}`)),c.position.set(u.rc(a%i),u.rc(~~(a/i))),c.width=c.height=World.Chunk.tile.size;}e&&(j.cacheAsBitmap=!0),l.animated||(j.cacheAsBitmap=!0),this.world.app.tween.fade({target:j,change:"alpha",from:0,to:1,duration:15});}}static key({x:a,y:b}){return `${a};${b}`}}_defineProperty(Chunk,"tile",{size:16});

	function _defineProperty$1(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}class Sea{constructor({world:a}){this.world=a,this.sprite=new PIXI.Sprite,this.render({delay:0});}async render({delay:a=250}={}){clearTimeout(this._render),this._render=setTimeout(async()=>{var a=Math.ceil;this.sprite.removeChildren(),this.sprite.anchor.set(.5);const b=a(this.world.app.renderer.view.width/World.Chunk.tile.size),c=a(this.world.app.renderer.view.height/World.Chunk.tile.size),d=textures.animated[`${World.Sea.texture}`];for(let a=-b;a<=b;a++)for(let b=-c;b<=c;b++){const c=this.sprite.addChild(new PIXI.AnimatedSprite(d.frames.map(PIXI.Texture.from)));c.animationSpeed=d.speed,c.position.set(a*World.Chunk.tile.size,b*World.Chunk.tile.size),c.width=c.height=World.Chunk.tile.size,c.play();}},a);}refresh({x:a,y:b}){const{origin:c}=this.world;this.sprite.alpha=0,this.sprite.position.set((c.x+a)*World.Chunk.tile.size,(c.y+b)*World.Chunk.tile.size),this.world.app.tween.fade({target:this.sprite,change:"alpha",from:0,to:1,duration:15});}}_defineProperty$1(Sea,"texture",2374);

	function _defineProperty$2(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}class World{constructor({app:a,name:b}){_defineProperty$2(this,"origin",{x:1/0,y:1/0}),_defineProperty$2(this,"boundary",{x:-Infinity,y:-Infinity}),_defineProperty$2(this,"chunks",new Map),_defineProperty$2(this,"creatures",new Set),_defineProperty$2(this,"load",{world:async()=>{var a=Math.abs;const{layers:b,tilesets:c}=(await axios.get(`/maps/${this.name}/map.json`)).data;for(let a of c)App.loader.renderer.add(`/maps/${this.name}/${u.basename({path:a.source,extension:!1})}.textures.json`);for(let a of b)for(let b of a.chunks)await u.mget({map:this.chunks,key:World.Chunk.key(b),create:a=>new World.Chunk({world:this,key:a})}).load({layer:a,chunk:b});this.app.viewport.left=this.origin.x*World.Chunk.tile.size,this.app.viewport.top=this.origin.y*World.Chunk.tile.size,this.app.viewport.worldWidth=a(this.boundary.x-this.origin.x)*World.Chunk.tile.size,this.app.viewport.worldHeight=a(this.boundary.y-this.origin.y)*World.Chunk.tile.size,this.sprite.position.set(-this.origin.x*World.Chunk.tile.size,-this.origin.y*World.Chunk.tile.size),this.app.data.maps=(await axios.get(`/maps/${this.name}/locations.json`)).data;},sea:async()=>{this.sea=new World.Sea({world:this}),this.sprite.addChildAt(this.sea.sprite,0);}}),_defineProperty$2(this,"add",{creature(){const a=new Creature({species:"mudkip"});this.pokemons.add(a),this.sprite.addChild(a.sprite);}}),this.name=b,this.sprite=new PIXI.Container,this.sprite.name=this.name,this.app=a,this.app.viewport.addChild(this.sprite);}async render({center:a=this.app.data.user.position,delay:b=100,radius:c="auto",offset:d=this.origin,force:e=!1}={}){clearTimeout(this._render),this._render=setTimeout(async()=>{"auto"===c&&(c=Math.ceil(1.5*Math.max(this.app.renderer.view.height/World.Chunk.tile.size,this.app.renderer.view.width/World.Chunk.tile.size))),d&&(a={x:a.x+d.x,y:a.y+d.y});const b=new Set,f=[];for(let d of this.chunks.values())f.push(d.render({center:a,radius:c,force:e,animated:b}));await Promise.all(f),b.forEach(a=>(a.play(),a.parent.cacheAsBitmap=!1)),this.app.GET.set("x",this.app.data.user.position.x),this.app.GET.set("y",this.app.data.user.position.y),window.history.pushState("","",`/?${this.app.GET.toString()}`);},b),this.sea.refresh(this.app.data.user.position);}camera({x:a,y:b,offset:c=this.origin}){this.app.viewport.moveCenter({x:(a-c.x)*World.Chunk.tile.size,y:(b-c.y)*World.Chunk.tile.size}),this.app.methods.update(),this.render();}}_defineProperty$2(World,"layers",{ignored:new Set(["00-boundaries"])}),_defineProperty$2(World,"Chunk",Chunk),_defineProperty$2(World,"Sea",Sea);

	function settings(){PIXI.settings.SCALE_MODE=PIXI.SCALE_MODES.NEAREST,PIXI.settings.MIPMAP_TEXTURES=PIXI.MIPMAP_MODES.OFF;}

	function _defineProperty$3(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}class App{constructor({world:a}){_defineProperty$3(this,"ready",new Promise(()=>null)),_defineProperty$3(this,"data",{user:{position:{x:0,y:0}},maps:[],show:{map:!1},lang:{},ready:!1}),_defineProperty$3(this,"methods",{camera:({x:a,y:b,offset:c})=>this.world.camera({x:a,y:b,offset:c}),update:()=>this.data.user.position={x:~~(this.view.center.x/World.Chunk.tile.size),y:~~(this.view.center.y/World.Chunk.tile.size)},render:()=>this.world.render(),redirect:a=>window.location.replace(a)}),_defineProperty$3(this,"renderer",new PIXI.Application({width:document.body.clientWidth,height:document.body.clientHeight,transparent:!0,resizeTo:window,antialias:!0})),_defineProperty$3(this,"viewport",new Viewport.Viewport({screenWidth:window.innerWidth,screenHeight:window.innerHeight,interaction:this.renderer.renderer.plugins.interaction})),_defineProperty$3(this,"controller",new Vue({el:"#app",data:this.data,methods:this.methods,mounted:()=>document.querySelector("#app .view").appendChild(this.renderer.view)})),_defineProperty$3(this,"view",this.renderer.stage.addChild(this.viewport)),_defineProperty$3(this,"GET",new URLSearchParams(window.location.search)),_defineProperty$3(this,"tween",{quadInOut:a=>a*a,fade:({target:a,change:b,from:c,to:d,duration:e})=>{let f=0,g=a.cacheAsBitmap;a.cacheAsBitmap=!1;const h=i=>{1<=(f+=i)/e?(a[b]=d,a.cacheAsBitmap=g,this.renderer.ticker.remove(h)):a[b]=Math.min(d,c+(d-c)*this.tween.quadInOut(f/e));};this.renderer.ticker.add(h);}}),settings(),this.world=new World({app:this,name:a}),this.view.on("moved",()=>this.methods.update()),this.view.on("moved-end",()=>this.methods.render()),this.view.on("zoomed-end",()=>this.methods.render()),this.view.drag().pinch().wheel().decelerate().clamp({direction:"all"}).clampZoom({minScale:.5,maxScale:1}),this.view.scale.set(1),this.ready=new Promise(async a=>{await this.world.load.world(),App.loader.renderer.load(async()=>{await this.world.load.sea(),await this.world.render({delay:0}),this.methods.camera(this.GET.has("x")&&this.GET.has("y")?{x:+this.GET.get("x")||0,y:+this.GET.get("y")||0,offset:{x:0,y:0}}:{x:329,y:-924}),this.methods.update(),this.data.ready=!0,this.data.lang=(await axios.get(`/lang/${this.GET.get("lang")||"en"}.json`)).data,a();});});}}_defineProperty$3(App,"loader",{renderer:PIXI.Loader.shared});

	(async function(){const a=new App({world:"overworld"});await a.ready;})();

}());
